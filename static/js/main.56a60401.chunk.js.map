{"version":3,"sources":["footer.js","App.js","serviceWorker.js","index.js","loader.svg"],"names":["Footer","react_default","a","createElement","className","href","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","document","getElementById","url","concat","state","country","category","req","Request","fetch","then","res","json","data","setState","articles","changeCountry","event","persist","target","value","changeCategory","isLoaded","_this2","_this$state","style","textAlign","id","onChange","onClick","map","item","key","alt","src","urlToImage","title","author","content","description","footer","loader","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.56a60401.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"doc-footer\">\r\n            <h6 >Powered by newsapi.org</h6>\r\n            <h6> &copy; <a href=\"https://vinod-vms.netlify.com\" > Vinod Mathew Sebastian </a> | Made with React </h6>\r\n            \r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","\r\nimport React, {Component} from 'react'\r\nimport './App.css'\r\n//import News from './News'\r\nimport Footer from './footer'\r\nimport loader from \"./loader.svg\"\r\n\r\n class App extends Component {\r\n     constructor(props){\r\n         super(props)\r\n         this.state = {\r\n            isLoaded: false, \r\n            country: \"country=in&\",\r\n            category: \"category=general&\",\r\n            data: [], \r\n          } \r\n          // this.changeCountry = this.changeCountry.bind(this);\r\n     }\r\n     \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const inputBx = document.getElementById(\"slct_category\");\r\n\r\n       \r\n    // if (e.target.value === \"category=general&\") {\r\n        // document.body.style.backgroundColor = \"blue\";\r\n    \r\n\r\n        let url=`https://newsapi.org/v2/top-headlines?${this.state.country}${this.state.category}apiKey=b239337e7bb5435ea0f696ca87535274`; \r\n       \r\n        let req = new Request(url); \r\n       fetch(req).then(res=>res.json()).then( \r\n         data=> { \r\n           this.setState( { \r\n              data: data.articles, \r\n               \r\n              \r\n           }) \r\n     \r\n         }) \r\n         /*\r\n         if (inputBx.value === 'category=business&') {\r\n            document.body.style.backgroundColor = \"#ffb1ab\"\r\n        }\r\n        else {\r\n            document.body.style.backgroundColor = \"#fff\"\r\n        }\r\n      */\r\n    }\r\n     changeCountry = event => {\r\n         event.persist();\r\n        this.setState( {           \r\n            country: event.target.value,\r\n                         \r\n        });\r\n        \r\n    }\r\n\r\n     componentDidMount(){\r\n         let url=`https://newsapi.org/v2/top-headlines?${this.state.country}${this.state.category}apiKey=b239337e7bb5435ea0f696ca87535274`; \r\n       \r\n        let req = new Request(url); \r\n       fetch(req).then(res=>res.json()).then( \r\n         data=> { \r\n           this.setState({ \r\n            isLoaded: true, \r\n             data: data.articles, \r\n              \r\n           }) \r\n     \r\n         }) \r\n\r\n     }\r\n\r\nchangeCategory = event => {\r\n    event.persist();\r\n    \r\n   this.setState( \r\n   {           \r\n       category: event.target.value,\r\n       } \r\n   );\r\n   \r\n\r\n \r\n}\r\n     render() {\r\n        var {isLoaded, data} = this.state; \r\n \r\n        if (!isLoaded) { return (\r\n            <div>\r\n                <div className=\"selectnews\"> <div className=\"logoimgdiv\"> </div>\r\n                <h1> World News</h1> \r\n                </div>\r\n               \r\n                <h2 style={{textAlign:'center'}}> News - Top Headlines </h2> \r\n              {/*}<div className=\"leader_container\"> <div className=\"leaderboard\" ></div> </div> {*/} \r\n        <div className=\"selectnews\" > \r\n        <p className=\"pls_slct\">Please select news:</p> \r\n        <div className=\"news_select_boxes\"> \r\n         <select id=\"slct_cntry\" onChange={this.changeCountry} value={this.state.country} > \r\n        <option value='country=in&'>India</option> \r\n        <option value='country=us&'>United States</option> \r\n        <option value='country=gb&'>UK</option> \r\n        <option value='country=ca&'>Canada</option> \r\n        <option value='country=za&'>South Africa</option> \r\n        <option value='country=ie&'>Ireland</option> \r\n        <option value='country=au&'>Australia</option> \r\n        <option value='country=nz&'>New Zealand</option> \r\n        <option value='country=ph&'>Phillipines</option> \r\n        <option value='country=sg&'>Singapore</option> \r\n         \r\n        </select> \r\n     \r\n    <select id=\"slct_category\" onChange={this.changeCategory} value={this.state.category} > \r\n        <option value='category=general&'>General</option>/option> \r\n        <option value='category=business&'>Business</option> \r\n        <option value='category=entertainment&'> Entertainment</option> \r\n        <option value='category=technology&'>Technology </option> \r\n        <option value='category=health&'>Health </option> \r\n        <option value='category=science&'>Science </option> \r\n        <option value='category=sports&'>Sports </option> \r\n    </select>\r\n    <button onClick={this.handleSubmit}>Go!</button> </div> </div> \r\n    \r\n        <div className=\"heading\"> \r\n        \r\n        <img src={loader} /> \r\n        \r\n        </div> \r\n         \r\n    <Footer />\r\n                </div>\r\n            \r\n        )\r\n        }\r\n\r\n\r\n        else\r\n    return (\r\n        <div>\r\n        <div className=\"selectnews\"> <div className=\"logoimgdiv\"> </div>\r\n                <h1> World News</h1> </div>\r\n            \r\n            <h2 style={{textAlign:'center'}}> News - Top Headlines <i>Live!</i> </h2> \r\n            <div className=\"leader_container\"> <div className=\"leaderboard\" ></div> </div>  \r\n    <div className=\"selectnews\" >  \r\n    <p className=\"pls_slct\">Please select news:</p> \r\n    <div className=\"news_select_boxes\"> \r\n     <select id=\"slct_cntry\" onChange={this.changeCountry} value={this.state.country} > \r\n    <option value='country=in&'>India</option> \r\n    <option value='country=us&'>United States</option> \r\n    <option value='country=gb&'>UK</option> \r\n    <option value='country=ca&'>Canada</option> \r\n    <option value='country=za&'>South Africa</option> \r\n    <option value='country=ie&'>Ireland</option> \r\n    <option value='country=au&'>Australia</option> \r\n    <option value='country=nz&'>New Zealand</option> \r\n    <option value='country=ph&'>Phillipines</option> \r\n    <option value='country=sg&'>Singapore</option> \r\n     \r\n    </select> \r\n \r\n<select id=\"slct_category\" onChange={this.changeCategory} value={this.state.category} > \r\n    <option value='category=general&'>General</option>/option> \r\n    <option value='category=business&'>Business</option> \r\n    <option value='category=entertainment&'> Entertainment</option> \r\n    <option value='category=technology&'>Technology </option> \r\n    <option value='category=health&'>Health </option> \r\n    <option value='category=science&'>Science </option> \r\n    <option value='category=sports&'>Sports </option> \r\n</select>\r\n<button id=\"myBtn\" onClick={this.handleSubmit}>Go!</button> </div> </div> \r\n<ul> \r\n  {data.map((item) => ( <li key={item.url}> <br/> <div className=\"one\" > <img alt=\"\" src={!item.urlToImage? '':item.urlToImage} /> </div> <br/>  \r\n<div className=\"two\"><h2> {!item.title?'':item.title} </h2> <br/> \r\n{!item.author ? '' : item.author} <br/> \r\n{!item.content?'':item.content}<br/> \r\n<a href={!item.url?'':item.url} target=\"_blank\" > {!item.description?'':item.description} </a><br/> \r\n <br/>  </div> <hr/></li> \r\n)) \r\n   \r\n  }   \r\n   \r\n  </ul> \r\n<Footer />\r\n            </div>\r\n        \r\n    )\r\n}\r\n }\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css' ;\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader.ff7b9e27.svg\";"],"sourceRoot":""}